/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'hendrik.vanderlinde' at '3/3/17 2:12 PM' with Gradle 2.10
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.10/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'org.hidetake.ssh'


mainClassName = 'com.nedap.university.server.MainServer'
version = '0.0.1'

jar {
    manifest {
        attributes 'Implementation-Title': 'Nedap University Module 2 Sample Project',
                'Implementation-Version': version,
                'Main-Class': mainClassName
    }
}

repositories{
    mavenCentral()
    mavenLocal()
}

dependencies{
    testCompile "junit:junit:4.12"
}

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'org.hidetake:gradle-ssh-plugin:2.8.0'
    }
}

remotes {
    pi {
        role 'masterNode'
        host = '192.168.40.7'
        user = 'pi'
        password = 'raspberry'
    }
}

task status {
    doLast {
        ssh.run {
            session(remotes.pi) {
                execute 'sudo systemctl status num2.service'
            }
        }
    }
}

task deploy {
    doLast {
        ssh.run {
            session(remotes.pi) {
                put from: "build/libs/NUM2-${version}.jar", into: "/home/pi/NUM2.jar"
                execute 'sudo systemctl restart num2.service'
            }
        }
    }
}

/*
// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.13'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}
*/
